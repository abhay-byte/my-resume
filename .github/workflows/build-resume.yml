# .github/workflows/create-release.yml

name: Create Resume Release

on:
  # Trigger this workflow when a new tag is pushed (e.g., v1.0, v2.1)
  # Tags must match the pattern 'v*' (e.g., v1.0, v2024.05.16)
  push:
    tags:
      - 'v*'
  
  # Also allow running this workflow manually from the Actions tab
  workflow_dispatch:
    # Manual trigger can optionally take an input for the tag name
    inputs:
      tag_name:
        description: 'The tag name for the new release (e.g., v1.1)'
        required: true
        default: 'v1.0.0-draft'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    # Grant permissions to write to releases
    permissions:
      contents: write # Needed to create releases and upload assets

    steps:
      # Step 1: Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Compile the LaTeX file to produce the PDF
      - name: Compile LaTeX to PDF
        run: |
          docker run --rm --user="$(id -u):$(id -g)" --net=none -v "${{ github.workspace }}:/data" leplusorg/latex latexmk -outdir=/data -pdf /data/resume.tex

      # Step 3: Create the GitHub Release and upload the PDF as a release asset
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          # The name of the file(s) to upload as release assets.
          files: resume.pdf
          # If triggered manually, use the input tag. If triggered by a tag push,
          # it will automatically use the tag that triggered the workflow.
          tag_name: ${{ github.event.inputs.tag_name || github.ref }}
          # The name of the release. Defaults to the tag name.
          name: Resume ${{ github.event.inputs.tag_name || github.ref }}
          # A description for the release. You can customize this.
          body: |
            Latest version of my resume.
            Compiled from commit ${{ github.sha }}.
          # `prerelease: true` marks it as a non-production release.
          # Change to `false` or remove for final versions.
          prerelease: false
          # `draft: true` creates a draft release that you must publish manually.
          # Change to `false` to publish it automatically.
          draft: false
